version: "3.6"
services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    image: hasura/graphql-engine:v2.38.0
    ports:
      - "8080:8080"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'
      # HASURA_GRAPHQL_JWT_SECRET: '{"type": "RS512", "key": "-----BEGIN CERTIFICATE-----\nMIIDHTCCAgWgAwIBAgIJebP/4KsfoqrfMA0GCSqGSIb3DQEBCwUAMCwxKjAoBgNV\nBAMTIWRldi1odXpxeWQwamUzdm56NzV2LnVzLmF1dGgwLmNvbTAeFw0yNDA1MDkw\nOTAwNDdaFw0zODAxMTYwOTAwNDdaMCwxKjAoBgNVBAMTIWRldi1odXpxeWQwamUz\ndm56NzV2LnVzLmF1dGgwLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC\nggEBAKj+qJEb9NkyzM3/EjbEFyH04xkX3lKPisTHz7IivaLwDWH8+LJQIRVaEDh/\nvRzv+7/dSFKe7zzCTkA5df6h2i9g4HueHPS3Sj/x030eKKt2p5UMkYJ0oI6LUsm1\nvRyWkDXIEDQrnpLgTfenbwPs1u4xHebbPTbVYvxGHpQCnvpVsTcusOcm2XPftzPC\nR3gYPW/dRGITKaoQ7jWWxoTpaB7mbc3oRS7FI20aqlPgxpPMesOZ9GL/empR/5FR\n7bjEbYak11voXeuBINK+/3JsNts8GNAgE6xlc0LXDKiSJvxMinuYKr8xKw/jf51J\nSGUanrFJB/jikBvGKJQs5AyNzwcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\nBgNVHQ4EFgQU5PDD5JsmtOkNl3rdqlgP4DWNlVQwDgYDVR0PAQH/BAQDAgKEMA0G\nCSqGSIb3DQEBCwUAA4IBAQB9MHPAZYCojuVPCr0ZLO2tR9kJpU0ND6zWFW55xe9S\nHXg/biuIXHryBZjgvabBi4phfgzthvdgizyAHwqP3eDN/xS1IjFhOm6n9Rlzp/b9\nas3ZRX2RdrdNSXHB/wxOe+toxtWpWV5pze7Nu8QzAOiflhxQYewAKefsr3CzmgFl\nV8oLJF1hgFTsZ3SiWCTXSGLO5iCOTzTzEiLkqDnOVH7NSUaSS1cP72kuDosPrtQD\nTFELV7GYfx8oN9IYpvFOr80mLcOEGGoYom+LXHdhvBZP+3pPdImv99k/lGJMY3Nx\nSBEHlp0S4RP9dM4NicN/wOAETZL/wyzUD/nIPon+gqo8\n-----END CERTIFICATE-----"}'
    depends_on:
      data-connector-agent:
        condition: service_healthy
  data-connector-agent:
    image: hasura/graphql-data-connector:v2.38.0
    restart: always
    ports:
      - 8081:8081
    environment:
      QUARKUS_LOG_LEVEL: ERROR # FATAL, ERROR, WARN, INFO, DEBUG, TRACE
      ## https://quarkus.io/guides/opentelemetry#configuration-reference
      QUARKUS_OPENTELEMETRY_ENABLED: "false"
      ## QUARKUS_OPENTELEMETRY_TRACER_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/athena/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 5s
volumes:
  db_data:
